{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;AACR,oBAAY,EAAC;AACT,uBAAQ,IAAI;AACZ,gBAAI,EAAC,EAAE,CAAC,MAAM;SACjB;KACJ;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAI,IAAI,GAAG,IAAI,CAAC;AAChB,UAAE,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;;;;;AAMlC,YAAI,CAAC,OAAO,GAAG,GAAG,CAAC;;;AAGnB,YAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AAClB,YAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AACzB,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE;AACxC,gBAAI,CAAC,cAAc,EAAE,CAAC;SACzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAoDJ;;AAED,UAAM,EAAE,gBAAU,EAAE,EAAE,EAErB;AACD,kBAAc,EAAC,0BAAW;AACtB,YAAI,MAAM,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAC/C,cAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAC,CAAC,EAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAE,IAAI,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;AAC7H,cAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;AACtC,YAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC3B,YAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAE7B;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        maggotPrefab:{\n            default:null,\n            type:cc.Prefab\n        },\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        var self = this;\n        cc.director.setDisplayStats(true);\n        // this.node.width = cc.visibleRect.width;\n        // this.node.height = cc.visibleRect.height;\n        \n\n        //通过位置和宽高定义的 2D 矩形。\n        this.padding = 100;\n        //this.Rectangle = new cc.rect(this.node.width + this.padding)\n        \n        this.maggots = [];\n        this.maggotAmount = 5000;\n        for (var i = 0; i < this.maggotAmount; i++) {\n            this.spawnOneMaggot();\n        }\n\n\n        \n        // this.moveSpeed = 0.5;\n        // this.schedule(function(){\n        //     for (var p = 0; p < self.maggots.length; p++) {\n        //         let m1 = self.maggots[p];\n\n        //         if(m1.rotation >360) m1.rotation -= 360;\n        //         var rota = m1.rotation;\n        //         if( rota >= 0  && rota <= 90){\n        //             m1.x += this.moveSpeed;\n        //             var movey = Math.floor(Math.cos(2*Math.PI/360*rota)*10);\n        //             if( movey != 0)m1.y += this.moveSpeed/movey;\n        //         } \n        //         if( 90 < rota && rota <= 180){\n        //            console.log(2);\n        //             m1.x += this.moveSpeed;\n        //             var movey = Math.floor(Math.cos(2*Math.PI/360*rota)*10);\n        //             if( movey != 0)m1.y -= this.moveSpeed/movey;\n        //         }\n        //         if( 180 < rota && rota <= 270){\n        //             console.log(2);\n        //             m1.x -= this.moveSpeed;\n        //             var movey = Math.floor(Math.cos(2*Math.PI/360*rota)*10);\n        //             if( movey != 0)m1.y -= this.moveSpeed/movey;\n        //         }\n        //         if( 270 < rota && rota <= 360){\n        //             console.log(3);\n        //             m1.x -= this.moveSpeed;\n        //             var movey = Math.floor(Math.cos(2*Math.PI/360*rota)*10);\n        //             if( movey != 0)m1.y += this.moveSpeed/movey;\n        //         }  \n\n        //         if(m1.y > this.node.width/2){\n        //             m1.y = 0;\n        //         }\n        //         if(m1.y < -this.node.width/2){\n        //             m1.y = 0;\n        //         }\n        //         if(m1.x > this.node.height/2){\n        //             m1.x = 0;\n        //         }\n        //         if(m1.x < -this.node.height/2){\n        //             m1.x = 0;\n        //         }\n        //     }       \n        // },0.01);\n\n\n\n    },\n    // called every frame\n    update: function (dt) {\n\n    },\n    spawnOneMaggot:function() {\n        var maggot = cc.instantiate(this.maggotPrefab);\n        maggot.setPosition(Math.random() * this.node.width - this.node.width/2,Math.random() * this.node.height -this.node.height/2);\n        maggot.rotation = Math.random() * 360;\n        this.node.addChild(maggot);\n        this.maggots.push(maggot);\n        \n    }\n});\n"
  ]
}