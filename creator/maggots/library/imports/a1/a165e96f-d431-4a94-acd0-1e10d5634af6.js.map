{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;KAUX;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAI,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,CAAC;AAC7C,YAAI,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,EAAC,CAAC,EAAC,GAAG,GAAC,IAAI,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,CAAC;AAC/C,YAAI,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,GAAC,CAAC,GAAC,CAAC,CAAC,CAAC;;AAE7C,YAAI,YAAY,GAAG,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACzD,YAAI,YAAY,GAAG,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;;AAE1C,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;AAClC,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;;AAGlC,YAAI,CAAC,SAAS,GAAG,GAAG,CAAC;KACxB;AACD,UAAM,EAAE,gBAAU,EAAE,EAAE;;;;;;;;;;;;;;;;;;;;;KAwBrB;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        var a1 = cc.scaleTo(2,1,1+Math.random()*0.2);\r\n        var a2 = cc.scaleTo(2,1,0.8+Math.random()*0.2);\r\n        var roBy = cc.rotateBy(1, Math.random()*4+3);\r\n\r\n        var repeateScale = cc.repeatForever(cc.sequence(a1, a2));\r\n        var repeatRotate = cc.repeatForever(roBy);\r\n      \r\n        this.node.runAction(repeateScale);\r\n        this.node.runAction(repeatRotate);\r\n\r\n            \r\n        this.moveSpeed = 0.1;\r\n    },\r\n    update: function (dt) {\r\n       // console.log(this.node.rotation);\r\n        \r\n\r\n        // if(this.node.rotation >360) this.node.rotation -= 360;\r\n        // if( 0 < this.node.rotation <= 90){\r\n        //     this.node.x += this.moveSpeed;\r\n        //     this.node.y += this.moveSpeed/Math.cos(2*Math.PI/360*this.node.rotation);\r\n        // } \r\n        // if( 90 < this.node.rotation <= 180){\r\n        //     this.node.x += this.moveSpeed;\r\n        //     this.node.y -= this.moveSpeed/Math.cos(2*Math.PI/360*this.node.rotation);\r\n        // }\r\n        // if( 180 < this.node.rotation <= 270){\r\n        //     this.node.x -= this.moveSpeed;\r\n        //     this.node.y -= this.moveSpeed/Math.cos(2*Math.PI/360*this.node.rotation);\r\n        // }\r\n        // if( 270 < this.node.rotation <= 360){\r\n        //     this.node.x -= this.moveSpeed;\r\n        //     this.node.y += this.moveSpeed/Math.cos(2*Math.PI/360*this.node.rotation);\r\n        // }\r\n        \r\n        \r\n        \r\n    },\r\n});\r\n"
  ]
}