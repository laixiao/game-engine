{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;AACR,cAAM,EAAC,CAAC,EAAE,CAAC,WAAW,CAAC;;;;;;;;;;;KAW1B;;;AAGD,UAAM,EAAE,kBAAY;AAChB,UAAE,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;;AAElC,YAAI,IAAI,GAAG,IAAI,CAAC;AAChB,YAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC;AACvC,YAAI,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC;AACzC,YAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;;AAEnB,YAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAC,GAAG,CAAC;AACjC,YAAI,WAAW,GAAG,GAAG,GAAC,GAAG,CAAC;AAC1B,YAAI,SAAS,GAAG,CAAC,CAAC;AAClB,YAAI,WAAW,GAAG,CAAC,CAAC;;AAEpB,aAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,CAAC,EAAE,CAAC,EAAE,EAAC;AAClB,iBAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,GAAG,EAAC,CAAC,EAAE,EAAC;AAClB,oBAAI,EAAE,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACvB,kBAAE,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC3B,kBAAE,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACxD,kBAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAE,CAAC,GAAG,CAAC,GAAC,MAAM,CAAE;AACvC,kBAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAE,CAAC,GAAG,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,GAAG,EAAE,CAAC;AACxD,kBAAE,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC;AAC/B,oBAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACvB,oBAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAC1B;SACJ;;AAED,YAAI,CAAC,QAAQ,CAAC,YAAU;;AAEtB,iBAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;AACnC,oBAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAG,SAAS,CAAC;AAC/B,oBAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAE,WAAW,CAAC;AACvC,oBAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAC,CAAC,GAAC,EAAE,EAAC;AACzC,wBAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAC,CAAC,GAAC,EAAE,CAAC;iBAC9C;aACJ;SAEF,EAAC,IAAI,CAAC,CAAC;KAEX;AACD,UAAM,EAAE,gBAAU,EAAE,EAAE,EAErB;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        frames:[cc.SpriteFrame]\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        cc.director.setDisplayStats(true);\r\n\r\n        var self = this;\r\n        this.node.width = cc.visibleRect.width;\r\n        this.node.height = cc.visibleRect.height;\r\n        this.cartonns = [];\r\n\r\n        var spaceX = this.node.width/100;//卡通人物的间隔\r\n        var spaceRotate = 360/100;//卡通人物的角度距离\r\n        var moveSpeed = 2;//卡通人物的移动速度\r\n        var rotateSpeed = 2;//卡通人物的旋转速度\r\n\r\n        for(let i=0; i<5; i++){\r\n            for(let j=0;j<100;j++){\r\n                var c1 = new cc.Node();\r\n                c1.addComponent(cc.Sprite);\r\n                c1.getComponent(cc.Sprite).spriteFrame = this.frames[i];\r\n                c1.x = -this.node.width /2 + j*spaceX ;\r\n                c1.y = -this.node.height /2 + i*this.node.height/5 + 80;\r\n                c1.rotation = -j * spaceRotate;\r\n                this.node.addChild(c1);\r\n                this.cartonns.push(c1);\r\n            }\r\n        }\r\n        \r\n        this.schedule(function(){\r\n            \r\n          for(let p=0;p<self.cartonns.length;p++){\r\n              self.cartonns[p].x +=moveSpeed;\r\n              self.cartonns[p].rotation+=rotateSpeed;\r\n              if(self.cartonns[p].x > this.node.width/2+20){\r\n                  self.cartonns[p].x = -this.node.width/2+20;\r\n              }\r\n          }\r\n\r\n        },0.01);\r\n\r\n    },\r\n    update: function (dt) {\r\n\r\n    },\r\n});\r\n"
  ]
}